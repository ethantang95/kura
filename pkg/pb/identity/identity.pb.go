// Code generated by protoc-gen-go. DO NOT EDIT.
// source: identity.proto

package identity

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetKeyRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetKeyRequest) Reset()         { *m = GetKeyRequest{} }
func (m *GetKeyRequest) String() string { return proto.CompactTextString(m) }
func (*GetKeyRequest) ProtoMessage()    {}
func (*GetKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_identity_199c4edfe52f2fdc, []int{0}
}
func (m *GetKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetKeyRequest.Unmarshal(m, b)
}
func (m *GetKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetKeyRequest.Marshal(b, m, deterministic)
}
func (dst *GetKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetKeyRequest.Merge(dst, src)
}
func (m *GetKeyRequest) XXX_Size() int {
	return xxx_messageInfo_GetKeyRequest.Size(m)
}
func (m *GetKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetKeyRequest proto.InternalMessageInfo

func (m *GetKeyRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type GetKeyResponse struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetKeyResponse) Reset()         { *m = GetKeyResponse{} }
func (m *GetKeyResponse) String() string { return proto.CompactTextString(m) }
func (*GetKeyResponse) ProtoMessage()    {}
func (*GetKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_identity_199c4edfe52f2fdc, []int{1}
}
func (m *GetKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetKeyResponse.Unmarshal(m, b)
}
func (m *GetKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetKeyResponse.Marshal(b, m, deterministic)
}
func (dst *GetKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetKeyResponse.Merge(dst, src)
}
func (m *GetKeyResponse) XXX_Size() int {
	return xxx_messageInfo_GetKeyResponse.Size(m)
}
func (m *GetKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetKeyResponse proto.InternalMessageInfo

func (m *GetKeyResponse) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type PutKeyRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutKeyRequest) Reset()         { *m = PutKeyRequest{} }
func (m *PutKeyRequest) String() string { return proto.CompactTextString(m) }
func (*PutKeyRequest) ProtoMessage()    {}
func (*PutKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_identity_199c4edfe52f2fdc, []int{2}
}
func (m *PutKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutKeyRequest.Unmarshal(m, b)
}
func (m *PutKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutKeyRequest.Marshal(b, m, deterministic)
}
func (dst *PutKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutKeyRequest.Merge(dst, src)
}
func (m *PutKeyRequest) XXX_Size() int {
	return xxx_messageInfo_PutKeyRequest.Size(m)
}
func (m *PutKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutKeyRequest proto.InternalMessageInfo

func (m *PutKeyRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *PutKeyRequest) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type PutKeyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutKeyResponse) Reset()         { *m = PutKeyResponse{} }
func (m *PutKeyResponse) String() string { return proto.CompactTextString(m) }
func (*PutKeyResponse) ProtoMessage()    {}
func (*PutKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_identity_199c4edfe52f2fdc, []int{3}
}
func (m *PutKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutKeyResponse.Unmarshal(m, b)
}
func (m *PutKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutKeyResponse.Marshal(b, m, deterministic)
}
func (dst *PutKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutKeyResponse.Merge(dst, src)
}
func (m *PutKeyResponse) XXX_Size() int {
	return xxx_messageInfo_PutKeyResponse.Size(m)
}
func (m *PutKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutKeyResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetKeyRequest)(nil), "identity.GetKeyRequest")
	proto.RegisterType((*GetKeyResponse)(nil), "identity.GetKeyResponse")
	proto.RegisterType((*PutKeyRequest)(nil), "identity.PutKeyRequest")
	proto.RegisterType((*PutKeyResponse)(nil), "identity.PutKeyResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IdentityServiceClient is the client API for IdentityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdentityServiceClient interface {
	GetPublicKey(ctx context.Context, in *GetKeyRequest, opts ...grpc.CallOption) (*GetKeyResponse, error)
	PutPublicKey(ctx context.Context, in *PutKeyRequest, opts ...grpc.CallOption) (*PutKeyResponse, error)
}

type identityServiceClient struct {
	cc *grpc.ClientConn
}

func NewIdentityServiceClient(cc *grpc.ClientConn) IdentityServiceClient {
	return &identityServiceClient{cc}
}

func (c *identityServiceClient) GetPublicKey(ctx context.Context, in *GetKeyRequest, opts ...grpc.CallOption) (*GetKeyResponse, error) {
	out := new(GetKeyResponse)
	err := c.cc.Invoke(ctx, "/identity.IdentityService/GetPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *identityServiceClient) PutPublicKey(ctx context.Context, in *PutKeyRequest, opts ...grpc.CallOption) (*PutKeyResponse, error) {
	out := new(PutKeyResponse)
	err := c.cc.Invoke(ctx, "/identity.IdentityService/PutPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IdentityServiceServer is the server API for IdentityService service.
type IdentityServiceServer interface {
	GetPublicKey(context.Context, *GetKeyRequest) (*GetKeyResponse, error)
	PutPublicKey(context.Context, *PutKeyRequest) (*PutKeyResponse, error)
}

func RegisterIdentityServiceServer(s *grpc.Server, srv IdentityServiceServer) {
	s.RegisterService(&_IdentityService_serviceDesc, srv)
}

func _IdentityService_GetPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServiceServer).GetPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity.IdentityService/GetPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServiceServer).GetPublicKey(ctx, req.(*GetKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IdentityService_PutPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdentityServiceServer).PutPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identity.IdentityService/PutPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdentityServiceServer).PutPublicKey(ctx, req.(*PutKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IdentityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "identity.IdentityService",
	HandlerType: (*IdentityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPublicKey",
			Handler:    _IdentityService_GetPublicKey_Handler,
		},
		{
			MethodName: "PutPublicKey",
			Handler:    _IdentityService_PutPublicKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "identity.proto",
}

func init() { proto.RegisterFile("identity.proto", fileDescriptor_identity_199c4edfe52f2fdc) }

var fileDescriptor_identity_199c4edfe52f2fdc = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x4c, 0x49, 0xcd,
	0x2b, 0xc9, 0x2c, 0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x54,
	0xb9, 0x78, 0xdd, 0x53, 0x4b, 0xbc, 0x53, 0x2b, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84,
	0x44, 0xb8, 0x58, 0x53, 0x73, 0x13, 0x33, 0x73, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20,
	0x1c, 0x25, 0x7d, 0x2e, 0x3e, 0x98, 0xb2, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x59, 0x2e,
	0xae, 0x82, 0xd2, 0xa4, 0x9c, 0xcc, 0xe4, 0xf8, 0xec, 0xd4, 0x4a, 0xb0, 0x62, 0x9e, 0x20, 0x4e,
	0x88, 0x88, 0x77, 0x6a, 0xa5, 0x92, 0x0b, 0x17, 0x6f, 0x40, 0x29, 0x41, 0x73, 0xd1, 0x4c, 0x61,
	0x42, 0x37, 0x45, 0x80, 0x8b, 0x0f, 0x66, 0x0a, 0xc4, 0x5a, 0xa3, 0xe9, 0x8c, 0x5c, 0xfc, 0x9e,
	0x50, 0xc7, 0x07, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0x39, 0x72, 0xf1, 0xb8, 0xa7, 0x96,
	0x04, 0xc0, 0x74, 0x09, 0x89, 0xeb, 0xc1, 0xbd, 0x8b, 0xe2, 0x37, 0x29, 0x09, 0x4c, 0x09, 0xa8,
	0x6f, 0x1c, 0xb9, 0x78, 0x02, 0x4a, 0xb1, 0x1b, 0x81, 0xe2, 0x0d, 0x64, 0x23, 0x50, 0x5d, 0x96,
	0xc4, 0x06, 0x0e, 0x5a, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x83, 0xd4, 0x1b, 0x59, 0x6c,
	0x01, 0x00, 0x00,
}
